{{> navbar}}
{{> back-button destinationURL="/" destinationName="Home"}}

<div class="row">
  <div class="col-sm-12 col-md-6 a order-2 order-md-1">

    <!-- Searchbar and filter/sort dropdown menu -->
    <div class="mt-4 mb-4 ml-4 mr-4">
      <form class="input-group">
        {{!-- <div class="input-group-prepend">
          <span class="input-group-text">Find</span>
        </div>
        <input type="text" class="form-control w-45" id="search" placeholder="doctors/pharmacies">
        <div class="input-group-prepend">
          <span class="input-group-text">Near</span>
        </div>
        <input type="text" class="form-control" id="location" placeholder="San Diego, CA"> --}}
        <input type="text" class="form-control" id="address" placeholder="Enter a city to find nearby services">
        <button type="submit" class="btn btn-primary" id="searchButton"><i class="fa fa-search"></i></input></button>
      </form>

      <div class="option-details">Showing doctors and pharmacies, sorted by best match</div>

      <div class="dropdowns">
        <div class="d-none" id="mapOptions" data-show_doctors="true" data-show_pharmacies="true" data-lat="32.8801"
          data-lng="-117.234" data-address="La Jolla" data-sort_by="best_match"></div>

        <div class="dropdown">
          <button class="btn btn-info dropdown-toggle" type="button" id="filterDropdownMenu" data-toggle="dropdown"
            aria-haspopup="true" aria-expanded="false">
            Filter
          </button>
          <div class="dropdown-menu" id="filterDropdown" aria-labelledby="filterDropdownMenu">
            <button class="dropdown-item" type="button" id="allButton">Show all</button>
            <button class="dropdown-item" type="button" id="pharmacyButton">Pharmacies only</button>
            <button class="dropdown-item" type="button" id="doctorButton">Doctors only</button>
          </div>
        </div>

        <div class="dropdown">
          <button class="btn btn-info dropdown-toggle" type="button" id="sortByDropdownMenu" data-toggle="dropdown"
            aria-haspopup="true" aria-expanded="false">
            Sort by
          </button>
          <div class="dropdown-menu" aria-labelledby="sortByDropdownMenu">
            <button class="dropdown-item" type="button" id="sortByBestMatchButton">Best Match</button>
            <button class="dropdown-item" type="button" id="sortByRatingButton">Rating</button>
          </div>
        </div>
      </div>
    </div>
    <!-- End searchbar and filter/sort dropdown menu -->

    <div class="container">
      <div class="text-danger" id="invalidSearch"></div>
    </div>

    <div class="container">
      <div class="map-cards">
      </div>
    </div>
  </div>

  <div class="col-sm-12 col-md-6 iframe-container order-1 order-md-2">
    <div id="map"></div>
  </div>
</div>

<script>
  const fetchDoctors = (infowindow) => {
    const lat = $('#mapOptions').data('lat');
    const lng = $('#mapOptions').data('lng');
    const sortBy = $('#mapOptions').data('sort_by');
    let url = `/doctor-data?lat=${lat}&lng=${lng}`;
    if (sortBy === 'rating') {
      url += '&sortByRating=true';
    }
    fetch(url).then(response => {
      return response.json();
    }).then(result => {
      console.log('Doctor data', result.data);
      let doctorArr = [];
      doctorArr = result.data;

      doctorArr.forEach(doctor => {
        const name = `${doctor.profile.first_name} ${doctor.profile.last_name}, ${doctor.profile.title}`;
        const image_url = doctor.profile.image_url;
        let specialtiesArr = [];
        doctor.specialties.forEach(specialty => specialtiesArr.push(specialty.name));
        const specialties = specialtiesArr.join(", ");
        const address_street = doctor.practices[0].visit_address.street;
        const address_city_state = `${doctor.practices[0].visit_address.city}, ${doctor.practices[0].visit_address.state} ${doctor.practices[0].visit_address.zip}`;
        const uid = doctor.uid;
        const lat = doctor.practices[0].lat;
        const long = doctor.practices[0].lon;
        const ratings = doctor.ratings;
        const doctorObjectWithRating = ratings.find(({ rating }) => {
          return rating !== undefined;
        });
        let rating;
        if (doctorObjectWithRating) {
          rating = doctorObjectWithRating.rating.toString();
          rating = rating.replace(".", "_");
        }
        // Display doctor cards
        if (rating) {
          $(".map-cards").append(`{{> card
                                      is-doctor="true"
                                      image-url="${image_url}"
                                      business-name="${name}"
                                      specialties="${specialties}"
                                      street-address="${address_street}"
                                      city-state-address="${address_city_state}"
                                      uid="${uid}"
                                      rating="${rating}"
                                      }}`);
        } else {
          $(".map-cards").append(`{{> card
                                      is-doctor="true"
                                      image-url="${image_url}"
                                      business-name="${name}"
                                      specialties="${specialties}"
                                      street-address="${address_street}"
                                      city-state-address="${address_city_state}"
                                      uid="${uid}"
                                      }}`);
        }

        // Display doctor markers on map
        const contentString = `
          <div class="infoWindow">
            <div class="row">
              <div class="col-6">
                <a href=/doctor/${uid}>
                  <img class="infoWindow__thumbnail" src=${image_url}>
                </a>
            </div>
              <div class="col-6">
                <div class="infoWindow-body">
                  <h5 class="infoWindow-title">${name}</h5>
                    <img class="infoWindow__ratings" src=${(rating && `images/stars/${rating}.png`) || ""}>
                    <p class="infoWindow-text">
                      <strong>Specialties</strong><br>
                        ${specialties}
                    </p>
                    <p class="infoWindow-text">
                      <strong>Address</strong><br>
                        ${address_street} <br>
                        ${address_city_state}
                    </p>
                <a id="doctor-id" href=/doctor/${uid}>
                  <button class="btn btn-dark">View more</button>
                </a>
              </div>
          </div>
          </div>
        </div>
        `;
        const pos = { lat: parseFloat(lat), lng: parseFloat(long) };

        const marker = new google.maps.Marker({
          position: pos,
          map: map
        });

        google.maps.event.addListener(marker, 'click', function () {
          infowindow.setContent(contentString);
          infowindow.open(map, marker);
        });
      });
    });
  }

  // Display pharmacy data on screen and create markers for each pharmacy on the map
  const fetchPharmacies = (infoWindow) => {
    const address = $('#mapOptions').data('address');
    const latitude = $('#mapOptions').data('lat');
    const longitude = $('#mapOptions').data('lng');
    const sortByType = $('#mapOptions').data('sort_by');
    let url = `/pharmacy-data?address=${address}&lat=${latitude}&lng=${longitude}&sortByType=${sortByType}`;
    fetch(url).then(response => {
      return response.json();
    }).then(result => {
      console.log('Pharmacy data', result);
      let pharmacyArr = [];
      pharmacyArr = result.businesses;

      pharmacyArr.forEach(pharmacy => {
        const name = pharmacy.name;
        const image_url = pharmacy.image_url || 'images/no-image-available.svg';
        const address_street = pharmacy.location.address1;
        const address_city_state = `${pharmacy.location.city}, ${pharmacy.location.state} ${pharmacy.location.zip_code}`;
        const uid = pharmacy.id;
        const lat = pharmacy.coordinates.latitude;
        const long = pharmacy.coordinates.longitude;
        const rating = `${pharmacy.rating}`.replace('.', '_');

        // Display pharmacy card
        $(".map-cards").append(`{{> card
                                      image-url="${image_url}"
                                      business-name="${name}"
                                      street-address="${address_street}"
                                      city-state-address="${address_city_state}"
                                      uid="${uid}"
                                      rating="${rating}"
                                      }}`);

        // Display pharmacy markers on map
        const contentString = `
        <div class="infoWindow">
          <div class="row">
            <div class="col-6">
              <a href=/pharmacy/${uid}>
                <img class="infoWindow__thumbnail" src=${image_url}>
              </a>
            </div>
            <div class="col-6">
              <div class="infoWindow-body">
                <h5 class="infoWindow-title">${name}</h5>
                <img class="infoWindow__ratings" src=${(rating && `images/stars/${rating}.png`) || ""}>
                <p class="infoWindow-text">
                  <strong>Address</strong> <br>
                    ${address_street} <br>
                    ${address_city_state}
                </p>
                <a id="pharmacy-id" href=/pharmacy/${uid}>
                  <button class="btn btn-dark">View more</button>
                </a>
              </div>
            </div>
          </div>
        </div>
        `;
        const pos = { lat: parseFloat(lat), lng: parseFloat(long) };

        // const infowindow = new google.maps.InfoWindow({
        //   content: contentString
        // });
        const marker = new google.maps.Marker({
          position: pos,
          map: map
        });

        google.maps.event.addListener(marker, 'click', function () {
          infoWindow.setContent(contentString);
          infoWindow.open(map, marker);
        });
      });
    });
  }

  document.addEventListener("DOMContentLoaded", event => {
    $('#searchButton').on('click', e => {
      e.preventDefault();
      const address = $('#address').val();
      fetch(`/geodata/${address}`).then(response => {
        return response.json();
      }).then(data => {
        $('#invalidSearch').html('');
        const geodata = data.results[0];
        const formattedAddress = geodata.formatted_address;
        const latitude = geodata.geometry.location.lat;
        const longitude = geodata.geometry.location.lng;
        $('#mapOptions').data('lat', latitude);
        $('#mapOptions').data('lng', longitude);
        $('#mapOptions').data('address', formattedAddress);
        initMap();
      }).catch(err => {
        console.log('Error getting geo data:', err);
        $('#invalidSearch').html('Invalid address. Try again.');
      })
    });

    $('#sortByBestMatchButton').on('click', e => {
      $('#mapOptions').data('sort_by', 'best_match');
      initMap();
    });

    $('#sortByRatingButton').on('click', e => {
      $('#mapOptions').data('sort_by', 'rating');
      initMap();
    });

    // Used for filtering
    $('#allButton').click(() => {
      $('#mapOptions').data('show_doctors', true);
      $('#mapOptions').data('show_pharmacies', true);
      initMap();
    });
    $('#pharmacyButton').click(() => {
      $('#mapOptions').data('show_doctors', false);
      $('#mapOptions').data('show_pharmacies', true);
      initMap();
    });
    $('#doctorButton').click(() => {
      $('#mapOptions').data('show_doctors', true);
      $('#mapOptions').data('show_pharmacies', false);
      initMap();
    });
  });

  let map, infoWindow;
  function initMap() {
    const lat = parseFloat($('#mapOptions').data('lat'));
    const lng = parseFloat($('#mapOptions').data('lng'));
    const doShowDoctors = $('#mapOptions').data('show_doctors');
    const doShowPharmacies = $('#mapOptions').data('show_pharmacies');
    const sortBy = $('#mapOptions').data('sort_by');
    map = new google.maps.Map(document.getElementById("map"), {
      center: { lat: lat, lng: lng },
      zoom: 10
    });
    $(".map-cards").html('');
    infoWindow = new google.maps.InfoWindow();

    if (doShowDoctors) {
      fetchDoctors(infoWindow);
    }
    if (doShowPharmacies) {
      fetchPharmacies(infoWindow);
    }

    if (doShowDoctors && !doShowPharmacies) {
      $('.option-details').text('Showing only doctors');
    } else if (!doShowDoctors && doShowPharmacies) {
      $('.option-details').text('Showing only pharmacies');
    } else {
      $('.option-details').text('Showing doctors and pharmacies');
    }
    if (sortBy === 'rating') {
      $('.option-details').append(', sorted by rating');
    } else if (sortBy === 'best_match') {
      $('.option-details').append(', sorted by best match');
    }
  }

  function loadMap() {
    const script = document.createElement("script");
    script.type = "text/javascript";
    script.defer = true;
    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBHdjbgVLLmAkHyH2dl5wwQQJskaHs3v3E&callback=initMap`;
    document.body.appendChild(script);
  }
  window.onload = loadMap;
</script>