{{!--
    previous-log.handlebars
    The Previous Injury Logs page is what the users will use to see their injuries that have recovered.
    The user can add an recovered injury to the page by clicking on the injury's "I have recovered" button in the Current Injuries Log page. 
    On the page, the users will see their past injuries in order of most recently resolved. 
    Each injury lists the name, description, creation date, expected recovery date, resolved date, and treatement plan.
    In addition, each injury has a log history, where you can see progress logs of the recovery.
    Also, the user has the ability to delete and put the injury back into to the Current Injuries Log page.
--}}

{{> navbar}}
{{> back-button destinationURL="/" destinationName="Home"}}

<h3 class="text-center mb-5">Past Injuries Log</h3>

<div class="container mb-4">
  <ul class="nav nav-pills nav-fill">
    <li class="nav-item">
      <a class="nav-link" href="/current-log">Current injuries</a>
    </li>
    <li class="nav-item">
      <a class="nav-link active" href="/previous-log">Past injuries</a>
    </li>
  </ul>
</div>

<!-- Display each of the previous injuries to the page -->
<div class="container">
  {{#each previousInjury}}
  <div class="card">
    <div class="card-body container">
      <h5 class="card-title">{{name}}</h5>
      <h6 class="card-subtitle mb-4 text-muted">{{description}}</h6>
      <h6 class="card-subtitle mb-4 text-muted"><strong>Created: </strong>{{created_at_string}}</h6>
      <h6 class="card-subtitle mb-4 text-muted"><strong>Expected recovery date: </strong>
        {{#if expected_recovery_date_string}}
        {{expected_recovery_date_string}}
        {{else}}
        Not specified
        {{/if}}
      </h6>
      <h6 class="card-subtitle mb-4 text-muted"><strong>Resolved: </strong>{{resolved_at_string}}</h6>

      <h6 class="card-subtitle mb-4 text-muted mb-4"><strong>Treatment plan: </strong>
        {{#if treatment}}
        {{treatment}}
        {{else}}
        Not specified
        {{/if}}
      </h6>

      <!-- Log history data -->
      <div class="mb-4">
        <a class="btn btn-dark log-history-btn" data-toggle="collapse" href="#collapseLogHistory{{injury_id}}"
          role="button" aria-expanded="false" aria-controls="collapseLogHistory{{injury_id}}"
          data-injury_id={{injury_id}}>
          <i class="fa fa-history"></i> Log History
        </a>
      </div>
      <div class="collapse mb-4" id="collapseLogHistory{{injury_id}}">
        <div class="card card-body">
          <div class="injuryLogs" id="injuryLog{{injury_id}}">
          </div>
        </div>
      </div>
      <!-- End log history data -->

      <button class="btn btn-danger delete-injury" data-id={{injury_id}}>
        <i class="fa fa-trash" aria-hidden="true"></i>
      </button>

      <button class="btn btn-secondary uncomplete-injury" data-id={{injury_id}}>
        <i class="fa fa-backward" aria-hidden="true">
          <span style="font-family:Arial;"> Move back to current</span>
        </i>
      </button>
    </div>
  </div>
  {{/each}}
</div>

<script>
  document.addEventListener("DOMContentLoaded", event => {
    // Add a history log item to the DOM
    function appendLogItem(selector, injuryId, logId, dateString, timeString, content) {
      $(selector).append(`
            <div class="log-item log-item${logId}">
              <div class="log-item__date">
                ${dateString} 
              </div>
              <div class="log-item__time">
                ${timeString}
              </div>
              <div class="log-item__text">
                  ${content}
              </div>
            </div>      
            `);
    };

    // Fetch the history log associated with a specific injury from the Postgres database
    function displayLogItems(injuryId) {
      $.ajax({
        url: `/view-logs/${injuryId}`,
        type: 'GET',
        success: logItems => {
          const injuryLogs = `#injuryLog${injuryId}`;
          $(injuryLogs).html('');
          if (logItems.length === 0) {
            return $(injuryLogs).html('No log history data');
          }
          logItems.forEach(logItem => {
            const dateString = new Date(logItem.time).toDateString();
            const timeString = new Date(logItem.time).toLocaleTimeString();
            const logId = logItem.log_id;
            const content = logItem.content;
            appendLogItem(injuryLogs, injuryId, logId, dateString, timeString, content);
          })
        },
        error: err => {
          console.log(err);
        }
      })
    };

    // After clicking "Log History" button, show all log data associated with current injury
    $('.log-history-btn').on('click', function () {
      const injuryId = $(this).data('injury_id');
      displayLogItems(injuryId);
    });

    $('.delete-injury').on('click', function () {
      const id = $(this).data('id');
      console.log('The id of the injury to delete is...', id);
      const url = `injury/${id}`;
      if (confirm('Delete this injury?')) {
        $.ajax({
          url: url,
          type: 'DELETE',
          success: result => {
            console.log('Deleting injury...');
            window.location.href = '/previous-log';
          },
          error: err => {
            console.log(err);
          }
        });
      }
    });

    $('.uncomplete-injury').on('click', function () {
      const id = $(this).data('id');
      console.log('The id of the injury to uncomplete is', id);
      const url = `uncomplete-injury/${id}`;
      if (confirm('Move injury back to current log?')) {
        $.ajax({
          url: url,
          type: 'POST',
          data: {
            injury_id: id
          },
          success: result => {
            console.log('Uncompleting injury...', result);
            window.location.href = '/previous-log';
          },
          error: err => {
            console.log('Error with uncompleting injury', err);
          }
        });
      }
    });

  });
</script>